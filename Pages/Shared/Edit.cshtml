@model BlogDetails.Command

<h2>Edit Post</h2>

<form asp-action="PublishEdit" asp-controller="Blog" asp-route-id="@Model.Blog.BlogId">
    <div class="col-md-12 well">
        <div class="form-group col-md-6">
            <label for="Title">Title</label>
            <input type="text" class="form-control" value="@Model.Blog.Title" name="Title" />
        </div>
        <div class="form-group col-md-12">
            <label for="Body" class="primaryField">Body</label>
            <textarea type="text" class="form-control" rows="10" name="Body">@Model.Blog.Body</textarea>
        </div>
        <div class="col-md-12">
            <input type="submit" name="PublishEdit" class="btn btn-primary btn-sm" value="Publish" />
        </div>
    </div>
</form>
<br />
<br />


@{
    foreach (var comment in Model.Blog.Comments)
    {
        <article>
            <div class="col-md-12">
                @*
                The Delete button doesn't work here because it's within a nested form, which is not supported.
                Since the Delete button is 'type="submit"', the browser treats it as a submit button for the
                outer EditComment form, and that is what gets posted back to the server. Clicking Delete actually
                performs the same action as clicking Edit.

                So first and foremost, you need to remove the nested "Delete" button form.

                For the rest, there's no easy fix, but you have choices:
                * Convert each button to a link, each of which goes to a new page: Edit goes to a new "Edit 
                  Comment" page, and Delete goes to a new "Delete Comment" page. On the Edit Post page, display
                  the comments as read-only; only allow editing the comment on the new "Edit Comment" page. For 
                  Delete, the page will display the comment and display a message asking if you're sure you want 
                  to delete the comment.This is probably the cleanest solution, and it's what we tend to do in 
                  FastBound. 
                * Make each button 'type="button"' (i.e., neither will submit the form directly), and then use
                  JavaScript to handle the approriate action based on which button was clicked. We do some of this
                  in FastBound, but we also have more sophisticated jQuery AJAX form handling that makes this
                  easier. Without that, you'd have to use JavaScript to modify the form action, and that's kind
                  of brittle, so I don't really recommend this approach.
                * Leave each button as 'type="submit"' and handle on the server side which button was clicked. 
                  You'll still need to use JavaScript to pass this information in the request, likely in a hidden
                  field. We use this in one or two places in FastBound.
                *@
                <form asp-controller="Blog" asp-action="EditComment" asp-route-id="@comment.CommentId">
                    <div class="col-md-12 well">
                        <div class="form-group col-md-6">
                            <input required type="text" class="form-control" name="Name" value="@comment.Author" />
                        </div><br />
                        <div class="form-group col-md-12">
                            <textarea style="white-space: pre-wrap;" required rows="5" class="form-control" name="Comment">@comment.Body</textarea>
                        </div>
                        <div class="col-md-12">
                            <input type="submit" name="edit" class="btn btn-primary btn-sm" value="Edit" />
                            <form asp-controller="Blog" asp-action="Delete" asp-route-id="@comment.CommentId" onclick="return confirm('Are you sure you want to delete this?')">
                                <button type="submit" name="delete" class="btn btn-primary btn-sm" >Delete</button>
                            </form>
                        </div>
                    </div>
                </form>

            </div>
        </article>
        <br>
    }
}